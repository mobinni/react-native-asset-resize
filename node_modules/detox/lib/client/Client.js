'use strict';var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();function _asyncToGenerator(fn) {return function () {var gen = fn.apply(this, arguments);return new Promise(function (resolve, reject) {function step(key, arg) {try {var info = gen[key](arg);var value = info.value;} catch (error) {reject(error);return;}if (info.done) {resolve(value);} else {return Promise.resolve(value).then(function (value) {step("next", value);}, function (err) {step("throw", err);});}}return step("next");});};}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}var AsyncWebSocket = require('./AsyncWebSocket');
var actions = require('./actions/actions');var

Client = function () {
  function Client(config) {_classCallCheck(this, Client);
    this.configuration = config;
    this.ws = new AsyncWebSocket(config.server);
    this.actionId = 0;
  }_createClass(Client, [{ key: 'connect', value: function () {var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {return regeneratorRuntime.wrap(function _callee$(_context) {while (1) {switch (_context.prev = _context.next) {case 0:_context.next = 2;return (


                  this.ws.open());case 2:
                this.sendAction(new actions.Login(this.configuration.sessionId));case 3:case 'end':return _context.stop();}}}, _callee, this);}));function connect() {return _ref.apply(this, arguments);}return connect;}() }, { key: 'reloadReactNative', value: function () {var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2() {return regeneratorRuntime.wrap(function _callee2$(_context2) {while (1) {switch (_context2.prev = _context2.next) {case 0:_context2.next = 2;return (



                  this.sendAction(new actions.ReloadReactNative()));case 2:case 'end':return _context2.stop();}}}, _callee2, this);}));function reloadReactNative() {return _ref2.apply(this, arguments);}return reloadReactNative;}() }, { key: 'sendUserNotification', value: function () {var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3(


      params) {return regeneratorRuntime.wrap(function _callee3$(_context3) {while (1) {switch (_context3.prev = _context3.next) {case 0:_context3.next = 2;return (
                  this.sendAction(new actions.SendUserNotification(params)));case 2:case 'end':return _context3.stop();}}}, _callee3, this);}));function sendUserNotification(_x) {return _ref3.apply(this, arguments);}return sendUserNotification;}() }, { key: 'waitUntilReady', value: function () {var _ref4 = _asyncToGenerator(regeneratorRuntime.mark(function _callee4() {return regeneratorRuntime.wrap(function _callee4$(_context4) {while (1) {switch (_context4.prev = _context4.next) {case 0:_context4.next = 2;return (



                  this.sendAction(new actions.Ready()));case 2:case 'end':return _context4.stop();}}}, _callee4, this);}));function waitUntilReady() {return _ref4.apply(this, arguments);}return waitUntilReady;}() }, { key: 'cleanup', value: function () {var _ref5 = _asyncToGenerator(regeneratorRuntime.mark(function _callee5() {return regeneratorRuntime.wrap(function _callee5$(_context5) {while (1) {switch (_context5.prev = _context5.next) {case 0:if (!



                this.ws.isOpen()) {_context5.next = 3;break;}_context5.next = 3;return (
                  this.sendAction(new actions.Cleanup()));case 3:case 'end':return _context5.stop();}}}, _callee5, this);}));function cleanup() {return _ref5.apply(this, arguments);}return cleanup;}() }, { key: 'execute', value: function () {var _ref6 = _asyncToGenerator(regeneratorRuntime.mark(function _callee6(



      invocation) {return regeneratorRuntime.wrap(function _callee6$(_context6) {while (1) {switch (_context6.prev = _context6.next) {case 0:
                if (typeof invocation === 'function') {
                  invocation = invocation();
                }_context6.next = 3;return (
                  this.sendAction(new actions.Invoke(invocation)));case 3:case 'end':return _context6.stop();}}}, _callee6, this);}));function execute(_x2) {return _ref6.apply(this, arguments);}return execute;}() }, { key: 'sendAction', value: function () {var _ref7 = _asyncToGenerator(regeneratorRuntime.mark(function _callee7(


      action) {var response;return regeneratorRuntime.wrap(function _callee7$(_context7) {while (1) {switch (_context7.prev = _context7.next) {case 0:
                action.messageId = this.actionId++;
                //action.messageId = action.messageId.toString();
                _context7.next = 3;return this.ws.send(JSON.stringify(action));case 3:response = _context7.sent;_context7.next = 6;return (
                  action.handle(JSON.parse(response)));case 6:return _context7.abrupt('return',
                response);case 7:case 'end':return _context7.stop();}}}, _callee7, this);}));function sendAction(_x3) {return _ref7.apply(this, arguments);}return sendAction;}() }]);return Client;}();



module.exports = Client;