'use strict';var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {return typeof obj;} : function (obj) {return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;};function _asyncToGenerator(fn) {return function () {var gen = fn.apply(this, arguments);return new Promise(function (resolve, reject) {function step(key, arg) {try {var info = gen[key](arg);var value = info.value;} catch (error) {reject(error);return;}if (info.done) {resolve(value);} else {return Promise.resolve(value).then(function (value) {step("next", value);}, function (err) {step("throw", err);});}}return step("next");});};}function _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call && (typeof call === "object" || typeof call === "function") ? call : self;}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}var invoke = require('../invoke');
var matchers = require('./matchers');
var Matcher = matchers.Matcher;
var LabelMatcher = matchers.LabelMatcher;
var IdMatcher = matchers.IdMatcher;
var TypeMatcher = matchers.TypeMatcher;
var TraitsMatcher = matchers.TraitsMatcher;
var VisibleMatcher = matchers.VisibleMatcher;
var NotVisibleMatcher = matchers.NotVisibleMatcher;
var ExistsMatcher = matchers.ExistsMatcher;
var NotExistsMatcher = matchers.NotExistsMatcher;
var TextMatcher = matchers.TextMatcher;
var ValueMatcher = matchers.ValueMatcher;

var invocationManager = void 0;

function setInvocationManager(im) {
  invocationManager = im;
}

//// examples

/*

element(by.label('Click Me')).tap();
[[EarlGrey selectElementWithMatcher:grey_accessibilityLabel(@"Click Me")] performAction:grey_tap()];
const _getMatcher1 = detox.invoke.call(detox.invoke.IOS.Class('GREYMatchers'), 'matcherForAccessibilityLabel:', 'Click Me');
const _getElement1 = detox.invoke.call(detox.invoke.EarlGrey.instance, 'selectElementWithMatcher:', _getMatcher1);
const _getAction1 = detox.invoke.call(detox.invoke.IOS.Class('GREYActions'), 'actionForTap');
const _getInteraction1 = detox.invoke.call(_getElement1, 'performAction:', _getAction1);
detox.invoke.execute(_getInteraction1);

expect(element(by.label('Yay'))).toBeVisible();
[[EarlGrey selectElementWithMatcher:grey_accessibilityLabel(@"Yay")] assertWithMatcher:grey_sufficientlyVisible()];
const _getMatcher2 = detox.invoke.call(detox.invoke.IOS.Class('GREYMatchers'), 'matcherForAccessibilityLabel:', 'Yay');
const _getElement2 = detox.invoke.call(detox.invoke.EarlGrey.instance, 'selectElementWithMatcher:', _getMatcher2);
const _getAssertMatcher2 = detox.invoke.call(detox.invoke.IOS.Class('GREYMatchers'), 'matcherForSufficientlyVisible');
const _getInteraction2 = detox.invoke.call(_getElement2, 'assertWithMatcher:', _getAssertMatcher2);
detox.invoke.execute(_getInteraction2);

*/var

Action = function Action() {_classCallCheck(this, Action);};var

TapAction = function (_Action) {_inherits(TapAction, _Action);
  function TapAction() {_classCallCheck(this, TapAction);var _this = _possibleConstructorReturn(this, (TapAction.__proto__ || Object.getPrototypeOf(TapAction)).call(this));

    _this._call = invoke.call(invoke.IOS.Class('GREYActions'), 'actionForTap');return _this;
  }return TapAction;}(Action);var


LongPressAction = function (_Action2) {_inherits(LongPressAction, _Action2);
  function LongPressAction() {_classCallCheck(this, LongPressAction);var _this2 = _possibleConstructorReturn(this, (LongPressAction.__proto__ || Object.getPrototypeOf(LongPressAction)).call(this));

    _this2._call = invoke.call(invoke.IOS.Class('GREYActions'), 'actionForLongPress');return _this2;
  }return LongPressAction;}(Action);var


MultiTapAction = function (_Action3) {_inherits(MultiTapAction, _Action3);
  function MultiTapAction(value) {_classCallCheck(this, MultiTapAction);var _this3 = _possibleConstructorReturn(this, (MultiTapAction.__proto__ || Object.getPrototypeOf(MultiTapAction)).call(this));

    if (typeof value !== 'number') throw new Error('MultiTapAction ctor argument must be a number, got ' + (typeof value === 'undefined' ? 'undefined' : _typeof(value)));
    _this3._call = invoke.call(invoke.IOS.Class('GREYActions'), 'actionForMultipleTapsWithCount:', invoke.IOS.NSInteger(value));return _this3;
  }return MultiTapAction;}(Action);var


TypeTextAction = function (_Action4) {_inherits(TypeTextAction, _Action4);
  function TypeTextAction(value) {_classCallCheck(this, TypeTextAction);var _this4 = _possibleConstructorReturn(this, (TypeTextAction.__proto__ || Object.getPrototypeOf(TypeTextAction)).call(this));

    if (typeof value !== 'string') throw new Error('TypeTextAction ctor argument must be a string, got ' + (typeof value === 'undefined' ? 'undefined' : _typeof(value)));
    _this4._call = invoke.call(invoke.IOS.Class('GREYActions'), 'actionForTypeText:', value);return _this4;
  }return TypeTextAction;}(Action);var


ReplaceTextAction = function (_Action5) {_inherits(ReplaceTextAction, _Action5);
  function ReplaceTextAction(value) {_classCallCheck(this, ReplaceTextAction);var _this5 = _possibleConstructorReturn(this, (ReplaceTextAction.__proto__ || Object.getPrototypeOf(ReplaceTextAction)).call(this));

    if (typeof value !== 'string') throw new Error('ReplaceTextAction ctor argument must be a string, got ' + (typeof value === 'undefined' ? 'undefined' : _typeof(value)));
    _this5._call = invoke.call(invoke.IOS.Class('GREYActions'), 'actionForReplaceText:', value);return _this5;
  }return ReplaceTextAction;}(Action);var


ClearTextAction = function (_Action6) {_inherits(ClearTextAction, _Action6);
  function ClearTextAction() {_classCallCheck(this, ClearTextAction);var _this6 = _possibleConstructorReturn(this, (ClearTextAction.__proto__ || Object.getPrototypeOf(ClearTextAction)).call(this));

    _this6._call = invoke.call(invoke.IOS.Class('GREYActions'), 'actionForClearText');return _this6;
  }return ClearTextAction;}(Action);var


ScrollAmountAction = function (_Action7) {_inherits(ScrollAmountAction, _Action7);
  function ScrollAmountAction(direction, amount) {_classCallCheck(this, ScrollAmountAction);var _this7 = _possibleConstructorReturn(this, (ScrollAmountAction.__proto__ || Object.getPrototypeOf(ScrollAmountAction)).call(this));

    if (typeof direction !== 'string') throw new Error('ScrollAmountAction ctor 1st argument must be a string, got ' + (typeof direction === 'undefined' ? 'undefined' : _typeof(direction)));
    switch (direction) {
      case 'left':direction = 1;break;
      case 'right':direction = 2;break;
      case 'up':direction = 3;break;
      case 'down':direction = 4;break;
      default:throw new Error('ScrollAmountAction direction must be a \'left\'/\'right\'/\'up\'/\'down\', got ' + direction);}

    if (typeof amount !== 'number') throw new Error('ScrollAmountAction ctor 2nd argument must be a number, got ' + (typeof amount === 'undefined' ? 'undefined' : _typeof(amount)));
    _this7._call = invoke.call(invoke.IOS.Class('GREYActions'), 'actionForScrollInDirection:amount:', invoke.IOS.NSInteger(direction), invoke.IOS.CGFloat(amount));return _this7;
  }return ScrollAmountAction;}(Action);var


ScrollEdgeAction = function (_Action8) {_inherits(ScrollEdgeAction, _Action8);
  function ScrollEdgeAction(edge) {_classCallCheck(this, ScrollEdgeAction);var _this8 = _possibleConstructorReturn(this, (ScrollEdgeAction.__proto__ || Object.getPrototypeOf(ScrollEdgeAction)).call(this));

    if (typeof edge !== 'string') throw new Error('ScrollEdgeAction ctor 1st argument must be a string, got ' + (typeof edge === 'undefined' ? 'undefined' : _typeof(edge)));
    switch (edge) {
      case 'left':edge = 0;break;
      case 'right':edge = 1;break;
      case 'top':edge = 2;break;
      case 'bottom':edge = 3;break;
      default:throw new Error('ScrollEdgeAction edge must be a \'left\'/\'right\'/\'top\'/\'bottom\', got ' + edge);}

    _this8._call = invoke.call(invoke.IOS.Class('GREYActions'), 'actionForScrollToContentEdge:', invoke.IOS.NSInteger(edge));return _this8;
  }return ScrollEdgeAction;}(Action);var


SwipeAction = function (_Action9) {_inherits(SwipeAction, _Action9);
  function SwipeAction(direction, speed) {_classCallCheck(this, SwipeAction);var _this9 = _possibleConstructorReturn(this, (SwipeAction.__proto__ || Object.getPrototypeOf(SwipeAction)).call(this));

    if (typeof direction !== 'string') throw new Error('SwipeAction ctor 1st argument must be a string, got ' + (typeof direction === 'undefined' ? 'undefined' : _typeof(direction)));
    if (typeof speed !== 'string') throw new Error('SwipeAction ctor 2nd argument must be a string, got ' + (typeof speed === 'undefined' ? 'undefined' : _typeof(speed)));
    switch (direction) {
      case 'left':direction = 1;break;
      case 'right':direction = 2;break;
      case 'up':direction = 3;break;
      case 'down':direction = 4;break;
      default:throw new Error('SwipeAction direction must be a \'left\'/\'right\'/\'up\'/\'down\', got ' + direction);}

    if (speed == 'fast') {
      _this9._call = invoke.call(invoke.IOS.Class('GREYActions'), 'actionForSwipeFastInDirection:', invoke.IOS.NSInteger(direction));
    } else if (speed == 'slow') {
      _this9._call = invoke.call(invoke.IOS.Class('GREYActions'), 'actionForSwipeSlowInDirection:', invoke.IOS.NSInteger(direction));
    } else {
      throw new Error('SwipeAction speed must be a \'fast\'/\'slow\', got ' + speed);
    }return _this9;
  }return SwipeAction;}(Action);var


Interaction = function () {function Interaction() {_classCallCheck(this, Interaction);}_createClass(Interaction, [{ key: 'execute', value: function () {var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {return regeneratorRuntime.wrap(function _callee$(_context) {while (1) {switch (_context.prev = _context.next) {case 0:_context.next = 2;return (


                  invocationManager.execute(this._call));case 2:case 'end':return _context.stop();}}}, _callee, this);}));function execute() {return _ref.apply(this, arguments);}return execute;}() }]);return Interaction;}();var



ActionInteraction = function (_Interaction) {_inherits(ActionInteraction, _Interaction);
  function ActionInteraction(element, action) {_classCallCheck(this, ActionInteraction);

    //if (!(element instanceof Element)) throw new Error(`ActionInteraction ctor 1st argument must be a valid Element, got ${typeof element}`);
    //if (!(action instanceof Action)) throw new Error(`ActionInteraction ctor 2nd argument must be a valid Action, got ${typeof action}`);
    var _this10 = _possibleConstructorReturn(this, (ActionInteraction.__proto__ || Object.getPrototypeOf(ActionInteraction)).call(this));_this10._call = invoke.call(element._call, 'performAction:', action._call);
    // TODO: move this.execute() here from the caller
    return _this10;}return ActionInteraction;}(Interaction);var


MatcherAssertionInteraction = function (_Interaction2) {_inherits(MatcherAssertionInteraction, _Interaction2);
  function MatcherAssertionInteraction(element, matcher) {_classCallCheck(this, MatcherAssertionInteraction);

    //if (!(element instanceof Element)) throw new Error(`MatcherAssertionInteraction ctor 1st argument must be a valid Element, got ${typeof element}`);
    //if (!(matcher instanceof Matcher)) throw new Error(`MatcherAssertionInteraction ctor 2nd argument must be a valid Matcher, got ${typeof matcher}`);
    var _this11 = _possibleConstructorReturn(this, (MatcherAssertionInteraction.__proto__ || Object.getPrototypeOf(MatcherAssertionInteraction)).call(this));_this11._call = invoke.call(element._call, 'assertWithMatcher:', matcher._call);
    // TODO: move this.execute() here from the caller
    return _this11;}return MatcherAssertionInteraction;}(Interaction);var


WaitForInteraction = function (_Interaction3) {_inherits(WaitForInteraction, _Interaction3);
  function WaitForInteraction(element, matcher) {_classCallCheck(this, WaitForInteraction);

    //if (!(element instanceof Element)) throw new Error(`WaitForInteraction ctor 1st argument must be a valid Element, got ${typeof element}`);
    //if (!(matcher instanceof Matcher)) throw new Error(`WaitForInteraction ctor 2nd argument must be a valid Matcher, got ${typeof matcher}`);
    var _this12 = _possibleConstructorReturn(this, (WaitForInteraction.__proto__ || Object.getPrototypeOf(WaitForInteraction)).call(this));_this12._element = element;
    _this12._originalMatcher = matcher;
    // we need to override the original matcher for the element and add matcher to it as well
    _this12._element._selectElementWithMatcher(_this12._element._originalMatcher.and(_this12._originalMatcher));return _this12;
  }_createClass(WaitForInteraction, [{ key: '_not', value: function _not()
    {
      this._notCondition = true;
      return this;
    } }, { key: 'withTimeout', value: function () {var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2(
      timeout) {var _conditionCall;return regeneratorRuntime.wrap(function _callee2$(_context2) {while (1) {switch (_context2.prev = _context2.next) {case 0:if (!(
                typeof timeout !== 'number')) {_context2.next = 2;break;}throw new Error('WaitForInteraction withTimeout argument must be a number, got ' + (typeof timeout === 'undefined' ? 'undefined' : _typeof(timeout)));case 2:if (!(
                timeout < 0)) {_context2.next = 4;break;}throw new Error('timeout must be larger than 0');case 4:
                _conditionCall = invoke.call(invoke.IOS.Class('GREYCondition'), 'detoxConditionForElementMatched:', this._element._call);
                if (this._notCondition) {
                  _conditionCall = invoke.call(invoke.IOS.Class('GREYCondition'), 'detoxConditionForNotElementMatched:', this._element._call);
                }
                this._call = invoke.call(_conditionCall, 'waitWithTimeout:', invoke.IOS.CGFloat(timeout));_context2.next = 9;return (
                  this.execute());case 9:case 'end':return _context2.stop();}}}, _callee2, this);}));function withTimeout(_x) {return _ref2.apply(this, arguments);}return withTimeout;}() }, { key: 'whileElement', value: function whileElement(

    searchMatcher) {
      return new WaitForActionInteraction(this._element, this._originalMatcher, searchMatcher);
    } }]);return WaitForInteraction;}(Interaction);var


WaitForActionInteraction = function (_Interaction4) {_inherits(WaitForActionInteraction, _Interaction4);
  function WaitForActionInteraction(element, matcher, searchMatcher) {_classCallCheck(this, WaitForActionInteraction);

    //if (!(element instanceof Element)) throw new Error(`WaitForActionInteraction ctor 1st argument must be a valid Element, got ${typeof element}`);
    //if (!(matcher instanceof Matcher)) throw new Error(`WaitForActionInteraction ctor 2nd argument must be a valid Matcher, got ${typeof matcher}`);
    var _this13 = _possibleConstructorReturn(this, (WaitForActionInteraction.__proto__ || Object.getPrototypeOf(WaitForActionInteraction)).call(this));if (!(searchMatcher instanceof Matcher)) throw new Error('WaitForActionInteraction ctor 3rd argument must be a valid Matcher, got ' + (typeof searchMatcher === 'undefined' ? 'undefined' : _typeof(searchMatcher)));
    _this13._element = element;
    _this13._originalMatcher = matcher;
    _this13._searchMatcher = searchMatcher;return _this13;
  }_createClass(WaitForActionInteraction, [{ key: '_execute', value: function () {var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3(
      searchAction) {var _interactionCall;return regeneratorRuntime.wrap(function _callee3$(_context3) {while (1) {switch (_context3.prev = _context3.next) {case 0:
                //if (!searchAction instanceof Action) throw new Error(`WaitForActionInteraction _execute argument must be a valid Action, got ${typeof searchAction}`);
                _interactionCall = invoke.call(this._element._call, 'usingSearchAction:onElementWithMatcher:', searchAction._call, this._searchMatcher._call);
                this._call = invoke.call(_interactionCall, 'assertWithMatcher:', this._originalMatcher._call);_context3.next = 4;return (
                  this.execute());case 4:case 'end':return _context3.stop();}}}, _callee3, this);}));function _execute(_x2) {return _ref3.apply(this, arguments);}return _execute;}() }, { key: 'scroll', value: function () {var _ref4 = _asyncToGenerator(regeneratorRuntime.mark(function _callee4(

      amount) {var direction = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'down';return regeneratorRuntime.wrap(function _callee4$(_context4) {while (1) {switch (_context4.prev = _context4.next) {case 0:
                // override the user's element selection with an extended matcher that looks for UIScrollView children
                this._searchMatcher = this._searchMatcher._extendToDescendantScrollViews();_context4.next = 3;return (
                  this._execute(new ScrollAmountAction(direction, amount)));case 3:case 'end':return _context4.stop();}}}, _callee4, this);}));function scroll(_x3) {return _ref4.apply(this, arguments);}return scroll;}() }]);return WaitForActionInteraction;}(Interaction);var



Element = function () {
  function Element(matcher) {_classCallCheck(this, Element);
    this._originalMatcher = matcher;
    this._selectElementWithMatcher(this._originalMatcher);
  }_createClass(Element, [{ key: '_selectElementWithMatcher', value: function _selectElementWithMatcher(
    matcher) {
      if (!(matcher instanceof Matcher)) throw new Error('Element _selectElementWithMatcher argument must be a valid Matcher, got ' + (typeof matcher === 'undefined' ? 'undefined' : _typeof(matcher)));
      this._call = invoke.call(invoke.EarlGrey.instance, 'detox_selectElementWithMatcher:', matcher._call);
    } }, { key: 'atIndex', value: function atIndex(
    index) {
      if (typeof index !== 'number') throw new Error('Element atIndex argument must be a number, got ' + (typeof index === 'undefined' ? 'undefined' : _typeof(index)));
      var _originalCall = this._call;
      this._call = invoke.call(_originalCall, 'atIndex:', invoke.IOS.NSInteger(index));
      return this;
    } }, { key: 'tap', value: function () {var _ref5 = _asyncToGenerator(regeneratorRuntime.mark(function _callee5() {return regeneratorRuntime.wrap(function _callee5$(_context5) {while (1) {switch (_context5.prev = _context5.next) {case 0:_context5.next = 2;return (

                  new ActionInteraction(this, new TapAction()).execute());case 2:return _context5.abrupt('return', _context5.sent);case 3:case 'end':return _context5.stop();}}}, _callee5, this);}));function tap() {return _ref5.apply(this, arguments);}return tap;}() }, { key: 'longPress', value: function () {var _ref6 = _asyncToGenerator(regeneratorRuntime.mark(function _callee6() {return regeneratorRuntime.wrap(function _callee6$(_context6) {while (1) {switch (_context6.prev = _context6.next) {case 0:_context6.next = 2;return (


                  new ActionInteraction(this, new LongPressAction()).execute());case 2:return _context6.abrupt('return', _context6.sent);case 3:case 'end':return _context6.stop();}}}, _callee6, this);}));function longPress() {return _ref6.apply(this, arguments);}return longPress;}() }, { key: 'multiTap', value: function () {var _ref7 = _asyncToGenerator(regeneratorRuntime.mark(function _callee7(

      value) {return regeneratorRuntime.wrap(function _callee7$(_context7) {while (1) {switch (_context7.prev = _context7.next) {case 0:_context7.next = 2;return (
                  new ActionInteraction(this, new MultiTapAction(value)).execute());case 2:return _context7.abrupt('return', _context7.sent);case 3:case 'end':return _context7.stop();}}}, _callee7, this);}));function multiTap(_x5) {return _ref7.apply(this, arguments);}return multiTap;}() }, { key: 'typeText', value: function () {var _ref8 = _asyncToGenerator(regeneratorRuntime.mark(function _callee8(

      value) {return regeneratorRuntime.wrap(function _callee8$(_context8) {while (1) {switch (_context8.prev = _context8.next) {case 0:_context8.next = 2;return (
                  new ActionInteraction(this, new TypeTextAction(value)).execute());case 2:return _context8.abrupt('return', _context8.sent);case 3:case 'end':return _context8.stop();}}}, _callee8, this);}));function typeText(_x6) {return _ref8.apply(this, arguments);}return typeText;}() }, { key: 'replaceText', value: function () {var _ref9 = _asyncToGenerator(regeneratorRuntime.mark(function _callee9(

      value) {return regeneratorRuntime.wrap(function _callee9$(_context9) {while (1) {switch (_context9.prev = _context9.next) {case 0:_context9.next = 2;return (
                  new ActionInteraction(this, new ReplaceTextAction(value)).execute());case 2:return _context9.abrupt('return', _context9.sent);case 3:case 'end':return _context9.stop();}}}, _callee9, this);}));function replaceText(_x7) {return _ref9.apply(this, arguments);}return replaceText;}() }, { key: 'clearText', value: function () {var _ref10 = _asyncToGenerator(regeneratorRuntime.mark(function _callee10() {return regeneratorRuntime.wrap(function _callee10$(_context10) {while (1) {switch (_context10.prev = _context10.next) {case 0:_context10.next = 2;return (


                  new ActionInteraction(this, new ClearTextAction()).execute());case 2:return _context10.abrupt('return', _context10.sent);case 3:case 'end':return _context10.stop();}}}, _callee10, this);}));function clearText() {return _ref10.apply(this, arguments);}return clearText;}() }, { key: 'scroll', value: function () {var _ref11 = _asyncToGenerator(regeneratorRuntime.mark(function _callee11(

      amount) {var direction = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'down';return regeneratorRuntime.wrap(function _callee11$(_context11) {while (1) {switch (_context11.prev = _context11.next) {case 0:
                // override the user's element selection with an extended matcher that looks for UIScrollView children
                this._selectElementWithMatcher(this._originalMatcher._extendToDescendantScrollViews());_context11.next = 3;return (
                  new ActionInteraction(this, new ScrollAmountAction(direction, amount)).execute());case 3:return _context11.abrupt('return', _context11.sent);case 4:case 'end':return _context11.stop();}}}, _callee11, this);}));function scroll(_x8) {return _ref11.apply(this, arguments);}return scroll;}() }, { key: 'scrollTo', value: function () {var _ref12 = _asyncToGenerator(regeneratorRuntime.mark(function _callee12(

      edge) {return regeneratorRuntime.wrap(function _callee12$(_context12) {while (1) {switch (_context12.prev = _context12.next) {case 0:
                // override the user's element selection with an extended matcher that looks for UIScrollView children
                this._selectElementWithMatcher(this._originalMatcher._extendToDescendantScrollViews());_context12.next = 3;return (
                  new ActionInteraction(this, new ScrollEdgeAction(edge)).execute());case 3:return _context12.abrupt('return', _context12.sent);case 4:case 'end':return _context12.stop();}}}, _callee12, this);}));function scrollTo(_x10) {return _ref12.apply(this, arguments);}return scrollTo;}() }, { key: 'swipe', value: function () {var _ref13 = _asyncToGenerator(regeneratorRuntime.mark(function _callee13(

      direction) {var speed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'fast';return regeneratorRuntime.wrap(function _callee13$(_context13) {while (1) {switch (_context13.prev = _context13.next) {case 0:
                // override the user's element selection with an extended matcher that avoids RN issues with RCTScrollView
                this._selectElementWithMatcher(this._originalMatcher._avoidProblematicReactNativeElements());_context13.next = 3;return (
                  new ActionInteraction(this, new SwipeAction(direction, speed)).execute());case 3:return _context13.abrupt('return', _context13.sent);case 4:case 'end':return _context13.stop();}}}, _callee13, this);}));function swipe(_x11) {return _ref13.apply(this, arguments);}return swipe;}() }]);return Element;}();var



Expect = function Expect() {_classCallCheck(this, Expect);};var

ExpectElement = function (_Expect) {_inherits(ExpectElement, _Expect);
  function ExpectElement(element) {_classCallCheck(this, ExpectElement);var _this14 = _possibleConstructorReturn(this, (ExpectElement.__proto__ || Object.getPrototypeOf(ExpectElement)).call(this));

    _this14._element = element;return _this14;
  }_createClass(ExpectElement, [{ key: 'toBeVisible', value: function () {var _ref14 = _asyncToGenerator(regeneratorRuntime.mark(function _callee14() {return regeneratorRuntime.wrap(function _callee14$(_context14) {while (1) {switch (_context14.prev = _context14.next) {case 0:_context14.next = 2;return (

                  new MatcherAssertionInteraction(this._element, new VisibleMatcher()).execute());case 2:return _context14.abrupt('return', _context14.sent);case 3:case 'end':return _context14.stop();}}}, _callee14, this);}));function toBeVisible() {return _ref14.apply(this, arguments);}return toBeVisible;}() }, { key: 'toBeNotVisible', value: function () {var _ref15 = _asyncToGenerator(regeneratorRuntime.mark(function _callee15() {return regeneratorRuntime.wrap(function _callee15$(_context15) {while (1) {switch (_context15.prev = _context15.next) {case 0:_context15.next = 2;return (


                  new MatcherAssertionInteraction(this._element, new NotVisibleMatcher()).execute());case 2:return _context15.abrupt('return', _context15.sent);case 3:case 'end':return _context15.stop();}}}, _callee15, this);}));function toBeNotVisible() {return _ref15.apply(this, arguments);}return toBeNotVisible;}() }, { key: 'toExist', value: function () {var _ref16 = _asyncToGenerator(regeneratorRuntime.mark(function _callee16() {return regeneratorRuntime.wrap(function _callee16$(_context16) {while (1) {switch (_context16.prev = _context16.next) {case 0:_context16.next = 2;return (


                  new MatcherAssertionInteraction(this._element, new ExistsMatcher()).execute());case 2:return _context16.abrupt('return', _context16.sent);case 3:case 'end':return _context16.stop();}}}, _callee16, this);}));function toExist() {return _ref16.apply(this, arguments);}return toExist;}() }, { key: 'toNotExist', value: function () {var _ref17 = _asyncToGenerator(regeneratorRuntime.mark(function _callee17() {return regeneratorRuntime.wrap(function _callee17$(_context17) {while (1) {switch (_context17.prev = _context17.next) {case 0:_context17.next = 2;return (


                  new MatcherAssertionInteraction(this._element, new NotExistsMatcher()).execute());case 2:return _context17.abrupt('return', _context17.sent);case 3:case 'end':return _context17.stop();}}}, _callee17, this);}));function toNotExist() {return _ref17.apply(this, arguments);}return toNotExist;}() }, { key: 'toHaveText', value: function () {var _ref18 = _asyncToGenerator(regeneratorRuntime.mark(function _callee18(

      value) {return regeneratorRuntime.wrap(function _callee18$(_context18) {while (1) {switch (_context18.prev = _context18.next) {case 0:_context18.next = 2;return (
                  new MatcherAssertionInteraction(this._element, new TextMatcher(value)).execute());case 2:return _context18.abrupt('return', _context18.sent);case 3:case 'end':return _context18.stop();}}}, _callee18, this);}));function toHaveText(_x13) {return _ref18.apply(this, arguments);}return toHaveText;}() }, { key: 'toHaveLabel', value: function () {var _ref19 = _asyncToGenerator(regeneratorRuntime.mark(function _callee19(

      value) {return regeneratorRuntime.wrap(function _callee19$(_context19) {while (1) {switch (_context19.prev = _context19.next) {case 0:_context19.next = 2;return (
                  new MatcherAssertionInteraction(this._element, new LabelMatcher(value)).execute());case 2:return _context19.abrupt('return', _context19.sent);case 3:case 'end':return _context19.stop();}}}, _callee19, this);}));function toHaveLabel(_x14) {return _ref19.apply(this, arguments);}return toHaveLabel;}() }, { key: 'toHaveId', value: function () {var _ref20 = _asyncToGenerator(regeneratorRuntime.mark(function _callee20(

      value) {return regeneratorRuntime.wrap(function _callee20$(_context20) {while (1) {switch (_context20.prev = _context20.next) {case 0:_context20.next = 2;return (
                  new MatcherAssertionInteraction(this._element, new IdMatcher(value)).execute());case 2:return _context20.abrupt('return', _context20.sent);case 3:case 'end':return _context20.stop();}}}, _callee20, this);}));function toHaveId(_x15) {return _ref20.apply(this, arguments);}return toHaveId;}() }, { key: 'toHaveValue', value: function () {var _ref21 = _asyncToGenerator(regeneratorRuntime.mark(function _callee21(

      value) {return regeneratorRuntime.wrap(function _callee21$(_context21) {while (1) {switch (_context21.prev = _context21.next) {case 0:_context21.next = 2;return (
                  new MatcherAssertionInteraction(this._element, new ValueMatcher(value)).execute());case 2:return _context21.abrupt('return', _context21.sent);case 3:case 'end':return _context21.stop();}}}, _callee21, this);}));function toHaveValue(_x16) {return _ref21.apply(this, arguments);}return toHaveValue;}() }]);return ExpectElement;}(Expect);var



WaitFor = function WaitFor() {_classCallCheck(this, WaitFor);};var

WaitForElement = function (_WaitFor) {_inherits(WaitForElement, _WaitFor);
  function WaitForElement(element) {_classCallCheck(this, WaitForElement);

    //if ((!element instanceof Element)) throw new Error(`WaitForElement ctor argument must be a valid Element, got ${typeof element}`);
    var _this15 = _possibleConstructorReturn(this, (WaitForElement.__proto__ || Object.getPrototypeOf(WaitForElement)).call(this));_this15._element = element;return _this15;
  }_createClass(WaitForElement, [{ key: 'toBeVisible', value: function toBeVisible()
    {
      return new WaitForInteraction(this._element, new VisibleMatcher());
    } }, { key: 'toBeNotVisible', value: function toBeNotVisible()
    {
      return new WaitForInteraction(this._element, new VisibleMatcher())._not();
    } }, { key: 'toExist', value: function toExist()
    {
      return new WaitForInteraction(this._element, new ExistsMatcher());
    } }, { key: 'toNotExist', value: function toNotExist()
    {
      return new WaitForInteraction(this._element, new ExistsMatcher())._not();
    } }, { key: 'toHaveText', value: function toHaveText(
    text) {
      return new WaitForInteraction(this._element, new TextMatcher(text));
    } }, { key: 'toHaveValue', value: function toHaveValue(
    value) {
      return new WaitForInteraction(this._element, new ValueMatcher(value));
    } }, { key: 'toNotHaveValue', value: function toNotHaveValue(
    value) {
      return new WaitForInteraction(this._element, new ValueMatcher(value))._not();
    } }]);return WaitForElement;}(WaitFor);


function expect(element) {
  if (element instanceof Element) return new ExpectElement(element);
  throw new Error('expect() argument is invalid, got ' + (typeof element === 'undefined' ? 'undefined' : _typeof(element)));
}

function waitFor(element) {
  if (element instanceof Element) return new WaitForElement(element);
  throw new Error('waitFor() argument is invalid, got ' + (typeof element === 'undefined' ? 'undefined' : _typeof(element)));
}

function element(matcher) {
  return new Element(matcher);
}

var by = {
  accessibilityLabel: function accessibilityLabel(value) {return new LabelMatcher(value);},
  label: function label(value) {return new LabelMatcher(value);},
  id: function id(value) {return new IdMatcher(value);},
  type: function type(value) {return new TypeMatcher(value);},
  traits: function traits(value) {return new TraitsMatcher(value);},
  value: function value(_value) {return new ValueMatcher(_value);},
  text: function text(value) {return new TextMatcher(value);} };


var exportGlobals = function exportGlobals() {
  global.element = element;
  global.expect = expect;
  global.waitFor = waitFor;
  global.by = by;
};

module.exports = {
  setInvocationManager: setInvocationManager,
  exportGlobals: exportGlobals,
  expect: expect,
  waitFor: waitFor,
  element: element,
  by: by };